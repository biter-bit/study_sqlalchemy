from sqlalchemy import Table, Column, Integer, String, MetaData
from sqlalchemy.orm import DeclarativeBase, Mapped, mapped_column

# -----------------------------------------------------------------------------

# Table - класс представления таблицы
# Column - класс представления поля в таблице
# Integer - класс представляет тип поля integer
# String - класс представляет тип поля string
# MetaData - класс представляет собой метаданные для таблицы бд
# Mapped - класс представляет собой преобразователь типа в тип sqlalchemy
# mapped_column - функция возвращает настройки для данного поля

# -------------------------------------------------------------------------------------

# --------------------------------Декларативный стиль---------------------------------------

class Base(DeclarativeBase):
    """Базовый класс для работы с ORM"""
    pass

class WorkersOrm(Base):
    """Представляет модель таблицы базы данных"""
    # название таблицы
    __tablename__ = "workers"

    id: Mapped[int] = mapped_column(primary_key=True)
    username: Mapped[str]




# ----------------------------Императивный стиль------------------------------------------

# обьект метаданных, которые хранят данные таблиц, чтобы мы могли в дальнейшем с ними работать
metadata_obj = MetaData()

# обьект таблицы для б.д. или императивный стиль создания модели
workers_table = Table(
    "workers", # название таблицы
    metadata_obj, # метаданные таблицы
    Column("id", Integer, primary_key=True), # колонка таблицы с настройками типа и параметров
    Column("username", String), # колонка таблицы с настройками типа и параметров
)